# -*- coding: utf-8 -*-
"""Project 15. Spam Mail Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19gwzZltga0Dfz9d5oGU7vXthsHmh9X0x

Importing the Dependencies
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data Collection and Pre-processing"""

# loading the from CSV file to a Pandas DataFrame
raw_mail_data = pd.read_csv('/content/mail_data.csv')

print(raw_mail_data)

# replace the null balues with a null string
mail_data = raw_mail_data.where((pd.notnull(raw_mail_data)),'')

# printing the first five rows of the data
mail_data.head()

# checking the number of rows and columns in the dataframe
mail_data.shape

"""Label Encoding"""

# label spam mail as 0; ham mail as 1;
mail_data.loc[mail_data['Category'] == 'spam', 'Category',] = 0
mail_data.loc[mail_data['Category'] == 'ham', 'Category',] = 1

"""Spam --> 0

Ham --> 1
"""

# separating the data as texts and label

X = mail_data['Message']

Y = mail_data['Category']

print(X)

print(Y)

"""Separating the data into Training data and Test data"""

X_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.2, random_state=3)

print(X.shape,X_train.shape,X_test.shape)

"""Feature Extraction"""

# transform the text data to feature vectors that can be used as input to the Logistic Regresson model
feature_extraction = TfidfVectorizer(min_df=1, stop_words='english', lowercase=True)

X_train_features = feature_extraction.fit_transform(X_train)
X_test_features = feature_extraction.transform(X_test)

# convert Y_train andY_test values as integers

Y_train = Y_train.astype('int')
Y_test = Y_test.astype('int')

print(X_train_features)

"""Training the Model

Logistic Regression
"""

model = LogisticRegression()

# training the Logistic Regression model with training data
model.fit(X_train_features, Y_train)

"""Model Evaluation"""

# prediction on training data
prediction_on_training_data = model.predict(X_train_features)
accuracy_score_on_training_data = accuracy_score(Y_train, prediction_on_training_data)

print('Accuracy Score on Training Data =', accuracy_score_on_training_data)

# prediction on test data
prediction_on_test_data = model.predict(X_test_features)
accuracy_score_on_test_data = accuracy_score(Y_test, prediction_on_test_data)

print('Accuracy Score on Test Data =', accuracy_score_on_test_data)

"""Building a Predictive System"""

input_mail = ["URGENT! You have won a 1 week FREE membership in our Â£100,000 Prize Jackpot! Txt the word: CLAIM to No: 81010 T&C www.dbuk.net LCCLTD POBOX 4403LDNW1A7RW18"]

# convert to feature vectors
input_data_feature = feature_extraction.transform(input_mail)

# making prediction

prediction = model.predict(input_data_feature)

print(prediction)

if prediction[0]==1:
  print('Ham mail')
else:
  print('Spam mail')

